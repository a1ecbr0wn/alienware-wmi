---
name: Release Binaries on Tag

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  release-tag:
    name: Build tag as a release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Toolchain setup
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu

      - name: Cross setup
        run: cargo install cross

      - name: Test
        run: cargo test

      - name: Build
        run: cargo build --release

      - name: Package Release
        run: tar cvzf alienware-cli.tar.gz --directory=target/release alienware-cli

      - name: Generate SHA checksum
        run: shasum -a 256 -U alienware-cli.tar.gz > alienware-cli.sha

      - name: Generate MD5 checksum
        run: md5sum --tag alienware-cli.tar.gz > alienware-cli.md5

      - name: Upload the artifact with the workflow run
        uses: actions/upload-artifact@v4
        with:
          name: alienware-cli-${{ github.ref_name }}
          path: alienware-cli.*
          retention-days: 1

  # Release Lib to crates.io
  release-lib-crates:
    name: Release Lib to crates.io
    runs-on: ubuntu-latest
    needs: [release-tag]
    if: github.ref_type == 'tag' && ( contains(github.ref_name, '-') == false )

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Toolchain setup
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu

      - name: Publish API to crates.io
        env:
          CARGO_REGISTRY_TOKEN: "${{ secrets.CRATES_TOKEN }}"
        run: cargo publish -p alienware

      - name: Sleep for 10 seconds so that crates.io can update it's references to alienware
        run: sleep 10s
        shell: bash

  # Release CLI to crates.io
  release-cli-crates:
    name: Release CLI to crates.io
    runs-on: ubuntu-latest
    needs: [release-lib-crates]
    if: github.ref_type == 'tag' && ( contains(github.ref_name, '-') == false )

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Toolchain setup
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu

      - name: Publish CLI to crates.io
        env:
          CARGO_REGISTRY_TOKEN: "${{ secrets.CRATES_TOKEN }}"
        run: cargo publish -p alienware_cli

  # Create the release artifacts in GitHub
  release-gh:
    name: Create the release artifacts in GitHub
    runs-on: ubuntu-latest
    needs: [release-tag]
    if: github.ref_type == 'tag' && ( contains(github.ref_name, '-') == false )

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}

      - name: Download all release artifacts from the workflow
        uses: actions/download-artifact@v5

      - name: Create CLI Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: CHANGELOG.md
          tag_name: "${{ github.ref_name }}"
          name: "Release ${{ github.ref_name }}"
          token: "${{ secrets.GITHUB_TOKEN }}"
          files: |
            LICENSE
            **/alienware-cli-*.*

  # Kick off the workflow in this repo that will generate the snapcraft yaml file
  release-cli-snap:
    name: Initiate release of the alienware cli application
    runs-on: ubuntu-latest
    needs: [release-cli-crates]
    if: github.ref_type == 'tag' && ( contains(github.ref_name, '-') == false )

    steps:
      - name: Repository Dispatch
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repo: a1ecbr0wn/alienware-wmi
          ref: refs/heads/main
          workflow: snap.yml
          inputs: '{ "snap_version": "${{ github.ref_name }}" }'
